# -*- coding: utf-8 -*-
"""entity_from_question.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18RR7NF3vkqQP5umixI6tCcZkiXWlGZRB
"""

import json
import re 
# entity mapped to document (ids) that contain the entities.
# entityid : [docid, docid, docid] etc
with open("entity_doc_mapping.json") as f:
  data = json.loads(f.read())
print(len(data))

with open("qa_train.txt") as file:
  questions, answers = [], []
  for line in file:
    questions.append(line.split('\t')[0])
    answers.append(line.split('\t')[1].split('|'))
# if multiple answers convert them into a list --- answers list of lists

questions = [re.sub(r'[^a-zA-Z0-9]',' ',each) for each in questions]

with open("kb_entity_dict.txt", "r") as f:
  entities, ids =[], []
  for line in f:
    entities.append(line.split('\t')[1][:-1])
    ids.append(line.split('\t')[0])
kb_entity_dict = dict(zip(entities,ids))

def question_extract(question):
  
  with open("kb_entity_dict.txt", "r") as f:
    entities, ids =[], []
    for line in f:
      entities.append(line.split('\t')[1][:-1])
      ids.append(line.split('\t')[0])
  kb_entity_dict = dict(zip(entities,ids))  
  entities = [entity for entity in question.split() if entity in kb_entity_dict.keys()]

  return entities

question_extract("Kismet is such a dainty")

