# -*- coding: utf-8 -*-
"""get_entities_docs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18RR7NF3vkqQP5umixI6tCcZkiXWlGZRB
"""

import json
import re 
from tqdm import tqdm
# entity mapped to document (ids) that contain the entities.
# entityid : [docid, docid, docid] etc

with open("qa_train.txt") as file:
  questions, answers = [], []
  for line in file:
    questions.append(line.split('\t')[0])
    answers.append(line.split('\t')[1].split('|'))
# if multiple answers convert them into a list --- answers list of lists

questions = [re.sub(r'[^a-zA-Z0-9]',' ',each) for each in questions]

def question_extract(question):
  
  with open("kb_entity_dict.txt", "r") as f:
    entities, ids =[], []
    for line in f:
      entities.append(line.split('\t')[1][:-1])
      ids.append(line.split('\t')[0])
  kb_entity_dict = dict(zip(entities,ids))  
  entities = [entity for entity in question.split() if entity in kb_entity_dict.keys()]
  ids = [kb_entity_dict[entity] for entity in entities]
  return entities,ids

def get_entity_docs(entity_ids):
  with open("entity_doc_mapping.json") as f:
    data = json.loads(f.read())  
  
  mapping = {id:data[id] for id in entity_ids}
  print((mapping.keys()))
  return mapping

entities_docids = get_entity_docs(question_extract("What Kismet is this malayalam  clint eastwood")[1])

list(entities_docs.values())

def get_docs(entities_docs):
  wiki_file = "processed_wiki.json"
  docs = {}
  with open(wiki_file,encoding='utf-8') as file:
    for line in tqdm(file):
      line = json.loads(line.strip())
      for entity,doc_ids in entities_docs.items():  

        if line["documentId"] in doc_ids:
          try:docs[entity].append(line["document"]["text"])
          except:docs[entity] = [line["document"]["text"]]
  return docs

entities_docs = get_docs(entities_docids)

